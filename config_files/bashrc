# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '

# Enable completion with sudo and man
complete -cf sudo
complete -cf man

# Set the default text editor
export EDITOR=vim

# Don't put duplicate lines or lines starting with space in the history.
# Increase history size.
HISTCONTROL=ignoreboth
HISTSIZE=100000
HISTFILESIZE=100000

# Customized prompt
set_prompt () {
    LAST_COMMAND=$?
    COLOR_BLUE='\[\e[01;34m\]'
    COLOR_WHITE='\[\e[01;37m\]'
    COLOR_RED='\[\e[01;31m\]'
    COLOR_GREEN='\[\e[01;32m\]'
    COLOR_YELLOW='\[\e[01;33m\]'
    COLOR_CYAN='\[\e[01;36m\]'
    COLOR_RESET='\[\e[00m\]'

    # Print last command exit status in green if successful or in red if not.
    if [[ $LAST_COMMAND == 0 ]]; then
        PS1="$COLOR_GREEN$LAST_COMMAND "
    else
        PS1="$COLOR_RED$LAST_COMMAND "
    fi
    # If root, just print the host in red. Otherwise, print the current user
    # and host in green.
    if [[ $EUID == 0 ]]; then
        PS1+="$COLOR_RED\\h "
    else
        PS1+="$COLOR_GREEN\\u@\\h "
    fi
    # Print the working directory in blue
    PS1+="$COLOR_BLUE\\w "

    # Print git current branch in yellow if we are in a git repository
    source ~/.git-prompt.sh
    if [[ -n "$(__git_ps1 "(%s)")" ]]; then
        PS1+="$COLOR_YELLOW"'$(__git_ps1 "(%s)") '
    fi

    # Reset color and print prompt marker ('#' if root, '$' otherwise)
    if [[ $EUID == 0 ]]; then
        MARKER="#"
    else
        MARKER="$"
    fi
    PS1+="$COLOR_RESET$MARKER "
}
PROMPT_COMMAND='set_prompt'

# Add local bin folder to path
PATH=~/.local/bin:$PATH

# use neofetch for displaying ASCII art distribution logo and system information
neofetch
